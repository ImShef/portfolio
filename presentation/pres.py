from pptx import Presentation
from pptx.util import Inches, Pt, Cm
from pptx.dml.color import RGBColor
from pptx.enum.text import PP_ALIGN
import matplotlib.pyplot as plt
import io
from pptx.enum.shapes import MSO_SHAPE

prs = Presentation()
prs.slide_width = Inches(13.33)
prs.slide_height = Inches(7.5)

# ========== –°–¢–ò–õ–ò ==========
COLORS = {
    'primary': RGBColor(13, 59, 102),
    'secondary': RGBColor(87, 171, 39),
    'accent': RGBColor(255, 196, 37),
    'background': RGBColor(241, 245, 249)
}

FONTS = {
    'title': ('Calibri Light', Pt(36)),
    'body': ('Calibri', Pt(18))
}

# ========== –§–£–ù–ö–¶–ò–ò ==========
def set_background(slide):
    background = slide.background
    fill = background.fill
    fill.gradient()
    fill.gradient_stops[0].color.rgb = COLORS['background']
    fill.gradient_stops[1].color.rgb = RGBColor(255, 255, 255)

def add_title(slide, text):
    title = slide.shapes.title
    title.text = text
    title.text_frame.paragraphs[0].font.color.rgb = COLORS['primary']
    title.text_frame.paragraphs[0].font.size = FONTS['title'][1]
    title.text_frame.paragraphs[0].font.name = FONTS['title'][0]

def add_decorative_line(slide, start_x, start_y, length):
    line = slide.shapes.add_shape(
        MSO_SHAPE.LINE_INVERSE,
        left=Cm(start_x),
        top=Cm(start_y),
        width=Cm(length),
        height=Cm(0))
    line.line.color.rgb = COLORS['accent']
    line.line.width = Pt(2.5)

def add_content_box(slide, text, pos_y):
    textbox = slide.shapes.add_textbox(Cm(1.5), Cm(pos_y), Cm(24), Cm(4.5))
    tf = textbox.text_frame
    tf.word_wrap = True
    
    for line in text.split('\n'):
        p = tf.add_paragraph()
        p.text = line
        p.font.size = Pt(18)
        p.font.color.rgb = COLORS['primary']
        p.space_after = Pt(6)
    
    add_decorative_line(slide, 1.5, pos_y-0.3, 24)

# ========== –°–õ–ê–ô–î 1: –¢–∏—Ç—É–ª—å–Ω—ã–π ==========
slide = prs.slides.add_slide(prs.slide_layouts[5])
set_background(slide)
add_title(slide, "–®—É–º–æ–≤–æ–µ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–µ:\n–í–ª–∏—è–Ω–∏–µ –Ω–∞ —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã")

subtitle = slide.shapes.add_textbox(Cm(1.5), Cm(8), Cm(20), Cm(2))
subtitle.text_frame.text = "–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ ‚Ä¢ 2023"
subtitle.text_frame.paragraphs[0].font.color.rgb = RGBColor(200, 200, 200)
subtitle.text_frame.paragraphs[0].font.size = Pt(18)

# ========== –°–õ–ê–ô–î 2: –£—Ä–æ–≤–Ω–∏ —à—É–º–∞ ==========
slide = prs.slides.add_slide(prs.slide_layouts[5])
set_background(slide)
add_title(slide, "–£—Ä–æ–≤–Ω–∏ –∑–≤—É–∫–æ–≤–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è")

fig, ax = plt.subplots(figsize=(8,4))
labels = ['–®—ë–ø–æ—Ç (30 –¥–ë)', '–û—Ñ–∏—Å (60 –¥–ë)', '–ü–æ–µ–∑–¥ (90 –¥–ë)']
values = [30, 60, 90]
ax.barh(labels, values, color=['#4a86e8', '#87ab39', '#ffc425'])
ax.spines['top'].set_visible(False)
ax.spines['right'].set_visible(False)
ax.tick_params(colors='#0D3B66')
plt.close()

# ========== –°–õ–ê–ô–î 3: –í–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –∑–¥–æ—Ä–æ–≤—å–µ ==========
slide = prs.slides.add_slide(prs.slide_layouts[5])
set_background(slide)
add_title(slide, "–§–∏–∑–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —ç—Ñ—Ñ–µ–∫—Ç—ã")
content = """‚Ä¢ –ù–∞—Ä—É—à–µ–Ω–∏—è —Å–Ω–∞ ‚Üí —Å–Ω–∏–∂–µ–Ω–∏–µ –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
‚Ä¢ –ü–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –∫–æ—Ä—Ç–∏–∑–æ–ª–∞ –Ω–∞ 37%
‚Ä¢ –†–∏—Å–∫ –≥–∏–ø–µ—Ä—Ç–æ–Ω–∏–∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –≤ 1.5 —Ä–∞–∑–∞
‚Ä¢ –ü–æ—Ç–µ—Ä—è —Å–ª—É—Ö–∞ –ø—Ä–∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ–º –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–∏"""
add_content_box(slide, content, 4.5)

# ========== –°–õ–ê–ô–î 4: –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —à—É–º–∞ ==========
slide = prs.slides.add_slide(prs.slide_layouts[5])
set_background(slide)
add_title(slide, "–û—Å–Ω–æ–≤–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —à—É–º–∞")
content = """üè≠ –ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å:
‚Ä¢ –ó–∞–≤–æ–¥—ã
‚Ä¢ –°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏
‚Ä¢ –ì–æ—Ä–Ω–æ–¥–æ–±—ã–≤–∞—é—â–∏–µ –∫–æ–º–ø–ª–µ–∫—Å—ã

üöó –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç:
‚Ä¢ –ê–≤—Ç–æ–º–∞–≥–∏—Å—Ç—Ä–∞–ª–∏
‚Ä¢ –ê—ç—Ä–æ–ø–æ—Ä—Ç—ã
‚Ä¢ –ñ–µ–ª–µ–∑–Ω—ã–µ –¥–æ—Ä–æ–≥–∏

üèôÔ∏è –ì–æ—Ä–æ–¥—Å–∫–∞—è —Å—Ä–µ–¥–∞:
‚Ä¢ –¢–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã
‚Ä¢ –ö–æ–Ω—Ü–µ—Ä—Ç–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏
‚Ä¢ –û–±—â–µ–ø–∏—Ç"""
add_content_box(slide, content, 4)

# ========== –°–õ–ê–ô–î 5: –í–ª–∏—è–Ω–∏–µ –Ω–∞ –∂–∏–≤–æ—Ç–Ω—ã—Ö ==========
slide = prs.slides.add_slide(prs.slide_layouts[5])
set_background(slide)
add_title(slide, "–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è")

fig, ax = plt.subplots(figsize=(6,6))
labels = ['–ú–æ—Ä—Å–∫–∏–µ –º–ª–µ–∫–æ–ø–∏—Ç–∞—é—â–∏–µ', '–ü—Ç–∏—Ü—ã', '–ù–∞—Å–µ–∫–æ–º—ã–µ']
sizes = [45, 30, 25]
ax.pie(sizes, labels=labels, autopct='%1.1f%%', colors=['#4a86e8', '#87ab39', '#ffc425'])



content = """üê≥ –ö–∏—Ç—ã: –ø–æ—Ç–µ—Ä—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏
ü¶â –°–æ–≤—ã: —Å–Ω–∏–∂–µ–Ω–∏–µ –æ—Ö–æ—Ç–Ω–∏—á—å–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
üêù –ü—á–µ–ª—ã: –Ω–∞—Ä—É—à–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
üê∏ –õ—è–≥—É—à–∫–∏: —Å–±–æ–π —Ä–µ–ø—Ä–æ–¥—É–∫—Ü–∏–∏"""
add_content_box(slide, content, 4)

# ========== –°–õ–ê–ô–î 6: –ù–æ—Ä–º–∞—Ç–∏–≤—ã ==========
slide = prs.slides.add_slide(prs.slide_layouts[5])
set_background(slide)
add_title(slide, "–ü—Ä–∞–≤–æ–≤–æ–µ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ")

table = slide.shapes.add_table(rows=4, cols=3, left=Cm(3), top=Cm(4), width=Cm(20), height=Cm(6)).table
table_data = [
    ['–ó–æ–Ω–∞', '–î–µ–Ω—å (–¥–ë)', '–ù–æ—á—å (–¥–ë)'],
    ['–ñ–∏–ª–∞—è', '55', '45'],
    ['–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è', '75', '65'],
    ['–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è', '85', '75']
]

for row_idx, row in enumerate(table_data):
    for col_idx, cell in enumerate(row):
        table.cell(row_idx, col_idx).text = cell
        tf = table.cell(row_idx, col_idx).text_frame
        tf.paragraphs[0].font.color.rgb = COLORS['primary']
        tf.paragraphs[0].font.size = Pt(16)
        if row_idx == 0:
            table.cell(row_idx, col_idx).fill.solid()
            table.cell(row_idx, col_idx).fill.fore_color.rgb = COLORS['accent']


# ======== –°–õ–ê–ô–î 7: –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è ========
slide = prs.slides.add_slide(prs.slide_layouts[5])
add_title(slide, "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —Å–Ω–∏–∂–µ–Ω–∏—è —à—É–º–∞")

content = [
    ["üåâ –®—É–º–æ–≤—ã–µ —ç–∫—Ä–∞–Ω—ã", 
     "‚Ä¢ –ü–æ–≥–ª–æ—â–µ–Ω–∏–µ –¥–æ 15 –¥–ë\n‚Ä¢ –ö–æ–º–ø–æ–∑–∏—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã\n‚Ä¢ –ó–µ–ª–µ–Ω—ã–µ –Ω–∞—Å–∞–∂–¥–µ–Ω–∏—è"],
    
    ["üîá –ê–∫—É—Å—Ç–∏—á–µ—Å–∫–∏–µ –ø–∞–Ω–µ–ª–∏", 
     "‚Ä¢ –ú–Ω–æ–≥–æ—Å–ª–æ–π–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞\n‚Ä¢ –û–≥–Ω–µ—Å—Ç–æ–π–∫–∏–µ –ø–æ–∫—Ä—ã—Ç–∏—è\n‚Ä¢ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è"],
    
    ["üöÜ –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è", 
     "‚Ä¢ –≠–ª–µ–∫—Ç—Ä–æ–¥–≤–∏–≥–∞—Ç–µ–ª–∏\n‚Ä¢ –ú–∞–≥–ª–µ–≤-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏\n‚Ä¢ –ë–µ—Å—à—É–º–Ω—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è"]
]


# ======== –°–õ–ê–ô–î 8: –ì—Ä–∞–¥–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ ========
slide = prs.slides.add_slide(prs.slide_layouts[5])
add_title(slide, "–£—Ä–±–∞–Ω–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–¥—Ö–æ–¥—ã")

# –°—Ö–µ–º–∞ —Å –ø–æ–¥–ø–∏—Å—è–º–∏


# ======== –°–õ–ê–ô–î 9: –£—Å–ø–µ—à–Ω—ã–µ –∫–µ–π—Å—ã ========
slide = prs.slides.add_slide(prs.slide_layouts[5])
add_title(slide, "–ú–∏—Ä–æ–≤–æ–π –æ–ø—ã—Ç")

content = [
    ["üáØüáµ –Ø–ø–æ–Ω–∏—è", 
     "‚Ä¢ –ê–∫—É—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ç–æ–Ω–Ω–µ–ª–∏\n‚Ä¢ –í–∏–±—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–µ–º–ø—Ñ–µ—Ä—ã\n‚Ä¢ –ù–æ—á–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è"],
    
    ["üá©üá™ –ì–µ—Ä–º–∞–Ω–∏—è", 
     "‚Ä¢ –ó–æ–Ω—ã —Ç–∏—à–∏–Ω—ã\n‚Ä¢ –ó–µ–ª–µ–Ω—ã–µ –∫–æ—Ä–∏–¥–æ—Ä—ã\n‚Ä¢ ¬´–¢–∏—Ö–∏–π –∞—Å—Ñ–∞–ª—å—Ç¬ª"],
    
    ["üá∏üá¨ –°–∏–Ω–≥–∞–ø—É—Ä", 
     
     "‚Ä¢ –£–º–Ω—ã–µ —Ñ–∞—Å–∞–¥—ã\n‚Ä¢ –ü–æ–¥–∑–µ–º–Ω—ã–µ –º–∞–≥–∏—Å—Ç—Ä–∞–ª–∏\n‚Ä¢ –î–∞—Ç—á–∏–∫–∏ —à—É–º–∞"]
]



# ======== –°–õ–ê–ô–î 10: –ó–∞–∫–ª—é—á–µ–Ω–∏–µ ========
slide = prs.slides.add_slide(prs.slide_layouts[5])
add_title(slide, "–ü—É—Ç–∏ —Ä–µ—à–µ–Ω–∏—è")

content = [[
    "‚úÖ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏\n"
    "‚úÖ –ì—Ä–∞–º–æ—Ç–Ω–æ–µ –∑–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ\n"
    "‚úÖ –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ\n"
    "‚úÖ –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ\n\n"
    "¬´–¢–∏—à–∏–Ω–∞ ‚Äî –æ—Å–Ω–æ–≤–∞ –≥–∞—Ä–º–æ–Ω–∏—á–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è¬ª"
]]


prs.save('noise_pollution_final.pptx')
print("–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")